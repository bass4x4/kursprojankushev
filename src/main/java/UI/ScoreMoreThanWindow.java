package UI;

import POJO.Query;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;

import static Backend.DBQueries.getPlayersWithNumberOfGoals;

public class ScoreMoreThanWindow {
    private JPanel scoreMoreThanPanel;
    private JTable playerGoalsTable;
    private JSpinner numberOfGoalsSpinner;
    private JButton executeButton;


    public ScoreMoreThanWindow() {
        numberOfGoalsSpinner.setModel(new SpinnerNumberModel(0, 0, Integer.MAX_VALUE, 1));
        executeButton.addActionListener(actionEvent -> {
            Query query = getPlayersWithNumberOfGoals(Integer.parseInt(numberOfGoalsSpinner.getValue() + ""));
            String[] columnNames = query.getColumnNames();
            DefaultTableModel model = new DefaultTableModel();
            model.setColumnIdentifiers(columnNames);
            playerGoalsTable.setModel(model);
            for (Object[] s : query.getRows()) {
                model.addRow(s);
            }
        });
    }

    public JPanel getScoreMoreThanPanel() {
        return scoreMoreThanPanel;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        scoreMoreThanPanel = new JPanel();
        scoreMoreThanPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        final JScrollPane scrollPane1 = new JScrollPane();
        scoreMoreThanPanel.add(scrollPane1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        playerGoalsTable = new JTable();
        scrollPane1.setViewportView(playerGoalsTable);
        numberOfGoalsSpinner = new JSpinner();
        scoreMoreThanPanel.add(numberOfGoalsSpinner, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        executeButton = new JButton();
        executeButton.setText("Выполнить");
        scoreMoreThanPanel.add(executeButton, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("Количество голов:");
        scoreMoreThanPanel.add(label1, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return scoreMoreThanPanel;
    }

}
